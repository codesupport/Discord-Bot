[
  {
    "title": "Pokemon lookup app",
    "tags": [
      "easy",
      "beginner",
      "spa",
      "react",
      "vue",
      "angular",
      "front-end",
      "frontend"
    ],
    "description": "Build a pokemon lookup app. Use https://pokeapi.co/ to retrieve data and parse said data into your view. Upon searching a specific pokemon, a button should be clicked to add it to the current view. This button generates a component which contains the pokemon information. Every new search adds a new component. Bonus, have a 'get random pokemon' button."
  },
  {
    "title": "Transfers dashboard",
    "tags": [
      "general",
      "medium",
      "fullstack",
      "full-stack"
    ],
    "description": "Create a dashboard which visualises self-generated data. A backend inserts in a database using an ORM money transfers. These transfers should have a date, currency (positive and negative) and a from - to person attached to them . The dashboard has to display relevant results for the data. The data has to be sortable. The results should have pagination. The search results should be filterable."
  },
  {
    "title": "Project ideas app",
    "tags": [
      "easy",
      "beginner",
      "back-end",
      "backend"
    ],
    "description": "Create an app that gives users ideas for their next project. The user should easily find specific project ideas based on some input."
  },
  {
    "title": "Lists app",
    "tags": [
      "easy",
      "beginner",
      "fullstack",
      "full-stack"
    ],
    "description": "A classic lists app. A backend serves some list data, and the frontend displays said list data. Bonus (low medium difficulty): add tags to the lists, and use a specification pattern to filter the list items based on property"
  },
  {
    "title": "Chat service",
    "tags": [
      "medium",
      "backend",
      "back-end",
      "websockets"
    ],
    "description": "Create your own chat application. Allow two different browsers to talk to one another using websockets. It should be possible for the chat application to do group and single person messaging (private rooms). Bonus, provide a interactive GUI for the chat application"
  },
  {
    "title": "Southpark AI",
    "tags": [
      "medium",
      "ML",
      "AI",
      "training"
    ],
    "description": "Use the following dataset: https://raw.githubusercontent.com/Eryck13/SouthParkTranscripts/master/south.json to generate a service which can spit out southpark lines on request. Train your model with the given dataset. Do sanitise the dataset. Bonus if you can talk to the service which gives you a 'southpark response' "
  },
  {
    "title": "Cake shop webstore",
    "tags": [
      "Beginner",
      "medium",
      "front-end",
      "frontend",
      "backend",
      "back-end"
    ],
    "description": "Create a webshop for a cake store. Provide an API where the owner of the shop can easily add new cakes to be sold. Important here is that cakes need to include specific information such as ingredients, costs, details on the cake, etc... . On the ingredients, automatic allergy detection should be present and warning should be given if allergies are a threat. Bonus points if people can make their own cake."
  },
  {
    "title": "Functional analog clock and timer",
    "tags": [
      "easy",
      "beginner",
      "medium",
      "front-end",
      "frontend",
      "javafx",
      "wpf",
      "css"
    ],
    "description": "Build a functional analog clock which displays the current time. Add a timer function which times in real time. Hours minutes and seconds should be visible. In addition, a digital timer should be accessible next to it. This project requires some math to complete."
  },
  {
    "title": "Project management tool",
    "tags": [
      "medium",
      "fullstack"
    ],
    "description": "Create a tool which can help you (and others) to finish their project. Projects have deadlines and specific dates to complete certain tasks. Not to mention there are a lot of types of projects. Include a way to tag your projects, mark subtasks under the project and attach a calendar to the project. Kudos if you can integrate google api for google calendars or get an ICO file from the project system to import to google calendars."
  },
  {
    "title": "CV tool",
    "tags": [
      "medium",
      "front-end",
      "frontend"
    ],
    "description": "Making a CV is old fashioned, especially for developers. Nevertheless it's the 'normal way of doing things'. Create a website which contains your CV information in website format. Add a button which parses the information to PDF format in a neat CV. Add a specialised link which shows this PDF formatted CV and hide it in a QR code (this is cool for business cards!). Extension : Make this a service by adding an edit panel and a backend service which can manage multiple CV's"
  },
  {
    "title": "Microservice challenge and questions app",
    "tags": [
      "hard",
      "microservices",
      "distributed",
      "docker",
      "backend",
      "back-end"
    ],
    "description": "Make a microservice application using the 12 factor paradigma as backbone to the application. Use messaging for the main communication between the application (or regular rest calls if this is too hard). Do mind you'll need a SAGA pattern for resources shared between microservices. The following domains should be in the application: User service, Game service, Team service. The game service needs to handle several different type of questions/challenges. Bonus: Add an api gateway (reverse proxy) which handles all the traffic flow inside the application. Use JWT tokens for security."
  },
  {
    "title": "Card game",
    "tags": [
      "easy"
    ],
    "description": "Make a card came using collections. Pick the correct collection which allows you to take the first or the last card of a stack. The card game contains a whole deck of cards: spades, diamonds, clubs and hearts, ace - king. Write an implementation which generates this deck of cards (use a nested for loop), has a shuffle functionality to randomise the collection. Once you have a collection with cards, try to make a higher lower game. The following format should be taken: 'CPU drew the 10 of clubs' 'Player drew the king of hearts' 'Player has the highest card, player wins.'. Bonus: make a GUI/website for this app."
  },
  {
    "title": "World health dashboard",
    "tags": [
      "front-end",
      "frontend",
      "medium",
      "spa",
      "angular",
      "vue",
      "react"
    ],
    "description": "Create a dashboard with data visualisation on the following datasets: https://www.who.int/data/gho/info/gho-odata-api . Add in filtering options, searching options with auto completion. Bonus: Try to work this out with rxjs. Try to change all functionality in the UI as requests towards the API with rxjs."
  },
  {
    "title": "Icecream app",
    "tags": [
      "front-end",
      "frontend",
      "medium",
      "spa",
      "angular",
      "vue",
      "react",
      "patterns"
    ],
    "description": "Create an app where users can order their own icecream. Start with asking for a cone or a cup (or other options). Next add the ability to add flavors. Do show extra information concerning these flavors, such as vegan, home made, etc. Show warnings for potential allergies. give the option for decoration, such as caramel, chocolate, strawberry dip, fruits, etc. All these options should make use of search options using a searchbar which makes use of a specification pattern. The icecream itself should make use of a decorator pattern. Allow a user to purchase multiple icecreams. At the end of the selection, display the total costs + allergy warnings. Different flavors / options can have different prices."
  },
  {
    "title": "Codesnippet app",
    "tags": [
      "back-end",
      "backend",
      "medium"
    ],
    "description": "Design an api service which can be used to easily exchange small code snippets between developers. These snippets should be search-able on given params. In addition, if a search is done on multiple codesnippets, return this result with pagination."
  }
]
